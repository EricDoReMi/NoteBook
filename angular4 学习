安装Angularcli:npm install -g @angular/cli
查看angular版本:ng -v
创建项目：ng new TestAngular(项目名)
Angular的目录结构
  ---e2e:端到端的测试目录
  ---src:源代码目录
    ---app：包含应用中的组件和模块（绝大部分代码存在这个目录下）
    ---assets:用于存放静态资源
    ---environmens：环境配置文件
    ---index.html：整个系统启动后的根html
    ---main.ts：整个web应用脚本的执行点入口，angular通过这个文件来启动整个项目
    ---polyfills.ts：导入一些必要的库，使angular能够运行在一些老版本的浏览器中
    ---styles.css:放置应用的一些全局的样式
    ---test.ts：用于进行自动化测试的
    ---tsconfig.json：typescript编译器的配置文件
  ---angular-cli.json：angular命令行工具的配置文件
  ---karma.conf.js：进行自动化测试
  ---package.json：列出了当前项目所依赖的第三方的包
  ---protractor.conf.js：用于自动化测试的配置文件
  ---tslink.json：是用于定义typescript代码质量检查的一些规范
  ---node_modules：存放的是第三方的包，是根据package.json中列示的第三方包下载存放的第三方包
  
 安装第三方库
 安装jquery：进入项目目录-->npm install jquery --save (--save表示将jquery的依赖计入到package.json文件中,并下载jquery到node_modules目录中)
 安装bootstrap-->npm install bootstrap --save
 
 让typescript代码认识到jquery和bootstrap
 npm install @types/jquery --save-dev
 npm install @types/bootstrap --save-dev
 
 同时安装完上面的包之后，需要到根目录下找到.angular-cli.json文件，把其中的 “scripts”: []修改成如下：
"scripts": [    "../node_modules/jquery/dist/jquery.min.js",    "../node_modules/bootstrap/dist/js/bootstrap.min.js"]同时需要把.angular-cli.json文件中的"styles": [“styles.css”]修改成如下：
 "styles": [        "styles.css",        "../node_modules/bootstrap/dist/css/bootstrap.min.css" ],
安装完成后，修改src目录下的tsconfig.app.json文件，将jquery添加到types数组中。把其中的"types": []修改成如下(此步现在最新版本已经不需要改了)：
 "types": ["jquery"]
 
 生成组件
 ng g component navba ---生成导航栏组件
