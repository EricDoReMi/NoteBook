//数组指针深入
#include "stdafx.h"

//一维数组指针访问一维数组
void Function_1_1()
{
	int arr[5] = {1,2,3,4,5};
	int (*p_arr)[5]=(int (*)[5]) arr;
	printf("%d\n",*(*(p_arr)+4));//5
	int (*p_arr2)[2]=(int (*)[2]) arr;
	printf("%d\n",*(*(p_arr2+1)+2));//5
	printf("%d\n",*(*(p_arr2+2)+0));//5

}

//一维数组指针访问二维数组
void Function_1_2()
{
	int arr[2][5]={
		{1,2,3,4,5},
		{6,7,8,9,10}
	};

	int (*p)[5]=(int (*)[5]) arr;
	printf("%d\n",*(*(p)+4));//5
	printf("%d\n",*(*(p+1)+4));//10
	int (*px)[2]=(int (*)[2]) arr;
	printf("%d\n",*(*(px)+4));//5
	printf("%d\n",*(*(px+1)+4));//7
}

//一维数组指针访问三维数组		
void Function_1_3()		
{		
	int arr[3][3][2] = 	
	{	
		{{1,2},{3,4},{5}},
		{{6,7},{8},{9,10}},
		{{11},{12,13},{14,15}}
	};	
	int (*p)[5] = (int (*)[5])arr;	
		
	printf("%d\n",*(*(p)+4));//5	
		
	printf("%d\n",*(*(p+1)+4));	//0
		
	printf("%d\n",*(*(p+2)+2));	//11
	
}	

//二维数组指针访问一维数组
void Function_2_1()
{
	int arr[15]={1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
	int (*p)[2][2]=(int (*)[2][2]) arr;
	printf("%d %d %d\n",*(*(*(p))),p[0][0][0],(*(p))[0][0]);//1 1 1
	printf("%d %d %d\n",*(*(*(p+1)+1)+1),p[1][1][1],(*(*(p+1)+1))[1]);//8 8 8
	printf("%d %d %d\n",*(*(*(p+2)+1)+2),p[2][1][2],(*(*(p+2)+1))[2]);//13 13 13
}	

//二维数组指针访问二维数组		
void Function_2_2()		
{		
	int arr[2][15] = 	
	{	
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15},
		{21,22,23,24,25,26,27,28,29,30,31,32,33,34,35}
	};	
		
	int (*p)[2][2] = (int (*)[2][2])arr;	
		
	printf("%d %d %d\n",*(*(*(p))),p[0][0][0],(*(p))[0][0]); //1 1 1	
		
	printf("%d %d %d\n",*(*(*(p+1)+1)),p[1][1][0],(*(p+1))[1][0]);//7 7 7

	printf("%d %d %d\n",*(*(*(p+1)+1)+1),p[1][1][1],(*(*(p+1)+1))[1]);//8 8 8
		
	printf("%d %d %d\n",*(*(*(p+3)+2)+2),p[3][2][2],(*(*(p+3)+2))[2]);//24 24 24;

}	 	




/*int main(int argc, char* argv[])
{
	
	Function_2_2();
		
	return 0;
}*/

